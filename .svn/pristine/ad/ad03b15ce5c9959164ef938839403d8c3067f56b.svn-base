package com.aixu.meeting.controller;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.aiko.common.util.SystemApi;
import com.aixu.meeting.dao.AikoLongapproomMapper;
import com.aixu.meeting.domain.AikoLongapproom;
import com.aixu.meeting.domain.AikoUser;
import com.aixu.meeting.domain.AixuMeetandroom;
import com.aixu.meeting.domain.AixuMeeting;
import com.aixu.meeting.domain.AixuMeetingroom;
import com.aixu.meeting.entity.OAPojo;
import com.aixu.meeting.service.MeetAndRoomService;
import com.aixu.meeting.service.MeetService;
import com.aixu.meeting.service.RoomService;
import com.aixu.meeting.service.UserService;
import com.aixu.meeting.utils.DateUtil;
import com.aixu.meeting.utils.IDUtils;
import com.aixu.meeting.utils.MeetingVo;
import com.aixu.meeting.utils.OAUtils;

@ControllerAdvice
@Controller
@RequestMapping("/common")
public class CommonController {
	private final static Logger logger = LoggerFactory.getLogger(CommonController.class);

	@Autowired
	private UserService userService;
	@Autowired
	private RoomService roomService;
	@Autowired
	private MeetAndRoomService meetAndRoomService;
	@Autowired
	private MeetService meetService;
	@Autowired
	private AikoLongapproomMapper aprDao;

	/**
	 * @desc 全局异常处理
	 * @param req
	 * @param model
	 * @return
	 */
	@ExceptionHandler(value = Exception.class)
	public String fail(HttpServletRequest req, HttpServletResponse res, Model model, Exception e) {
		int errorState = res.getStatus();
		String errorUrl = req.getServletPath();
		String errorTime = DateUtil.getDateFormat(new Date(), "yyyy-MM-dd HH:mm");
		model.addAttribute("errorState", errorState);
		model.addAttribute("errorUrl", errorUrl);
		model.addAttribute("errorTime", errorTime);
		e.printStackTrace();
		return "common/fail";
	}

	@RequestMapping("/render")
	public String render() {
		return "common/render";
	}

	@RequestMapping("/tiaoz")
	public String tiaoZ() {
		return "common/tiaoz";
	}

	/**
	 * @desc  跳转长期申请
	 * @param roomIds
	 * @param model
	 * @param req
	 * @param staTime
	 * @param endTime
	 * @param state
	 * @return
	 */
	@PostMapping("/applyLongTime")
	public String applyLongTime(@RequestParam(name = "rooms", required = false) String roomIds, Model model,
			HttpServletRequest req, @RequestParam(name = "staTime", required = false) String staTime,
			@RequestParam(name = "endTime", required = false) String endTime,
			@RequestParam(name = "state", required = false) String state) {
		String userId = (String) SystemApi.getCurrentUser().get("userid");
		String userName = (String) SystemApi.getCurrentUser().get("name");
		// String userId = "1016087";
		// String userName = "姜林乐";

		List<AixuMeetingroom> onlyTwo = new ArrayList<AixuMeetingroom>();
		String[] roomId = roomIds.split(",");
		for (int i = 0; i < roomId.length; i++) {
			AixuMeetingroom roomById = roomService.getRoomById(roomId[i]);
			onlyTwo.add(roomById);
		}
		List<AikoUser> userlist = userService.listAllUser();
		// 总经办
		ArrayList<AikoUser> zzb = new ArrayList<>();
		List<AikoUser> zzb1 = userService.listUserByDeptId("150");
		List<AikoUser> zzb2 = userService.listUserByDeptId("223");
		List<AikoUser> zzb3 = userService.listUserByDeptId("224");
		List<AikoUser> zzb4 = userService.listUserByDeptId("225");
		List<AikoUser> zzb5 = userService.listUserByDeptId("226");
		List<AikoUser> zzb6 = userService.listUserByDeptId("239");
		List<AikoUser> zzb7 = userService.listUserByDeptId("238");
		zzb.addAll(zzb1);
		zzb.addAll(zzb2);
		zzb.addAll(zzb3);
		zzb.addAll(zzb4);
		zzb.addAll(zzb5);
		zzb.addAll(zzb6);
		zzb.addAll(zzb7);
		model.addAttribute("zzbs", zzb);
		// 流程与IT部
		ArrayList<AikoUser> it = new ArrayList<>();
		List<AikoUser> it1 = userService.listUserByDeptId("151");
		List<AikoUser> it2 = userService.listUserByDeptId("208");
		it.addAll(it1);
		it.addAll(it2);
		model.addAttribute("its", it);
		// 人力资源与行政部
		ArrayList<Object> rlzy = new ArrayList<>();
		List<AikoUser> rlzy1 = userService.listUserByDeptId("153");
		List<AikoUser> rlzy2 = userService.listUserByDeptId("237");
		List<AikoUser> rlzy3 = userService.listUserByDeptId("211");
		List<AikoUser> rlzy4 = userService.listUserByDeptId("212");
		List<AikoUser> rlzy5 = userService.listUserByDeptId("213");
		rlzy.addAll(rlzy1);
		rlzy.addAll(rlzy2);
		rlzy.addAll(rlzy3);
		rlzy.addAll(rlzy4);
		rlzy.addAll(rlzy5);
		model.addAttribute("rlzys", rlzy);
		// 采购
		List<AikoUser> cg = new ArrayList<>();
		List<AikoUser> cg1 = userService.listUserByDeptId("158");
		List<AikoUser> cg2 = userService.listUserByDeptId("185");
		List<AikoUser> cg3 = userService.listUserByDeptId("186");
		List<AikoUser> cg4 = userService.listUserByDeptId("187");
		List<AikoUser> cg5 = userService.listUserByDeptId("188");
		List<AikoUser> cg6 = userService.listUserByDeptId("189");
		List<AikoUser> cg7 = userService.listUserByDeptId("190");
		cg.addAll(cg1);
		cg.addAll(cg2);
		cg.addAll(cg3);
		cg.addAll(cg4);
		cg.addAll(cg5);
		cg.addAll(cg6);
		cg.addAll(cg7);
		model.addAttribute("cgs", cg);
		// 财务
		List<AikoUser> cw = new ArrayList<>();
		List<AikoUser> cw1 = userService.listUserByDeptId("152");
		List<AikoUser> cw2 = userService.listUserByDeptId("204");
		List<AikoUser> cw3 = userService.listUserByDeptId("205");
		List<AikoUser> cw4 = userService.listUserByDeptId("206");
		List<AikoUser> cw5 = userService.listUserByDeptId("207");
		cw.addAll(cw1);
		cw.addAll(cw2);
		cw.addAll(cw3);
		cw.addAll(cw4);
		cw.addAll(cw5);
		model.addAttribute("cws", cw);
		// 销售
		List<AikoUser> allXs = new ArrayList<>();
		List<AikoUser> xs1 = userService.listUserByDeptId("155");
		List<AikoUser> xs2 = userService.listUserByDeptId("156");
		List<AikoUser> xs3 = userService.listUserByDeptId("157");
		List<AikoUser> xs4 = userService.listUserByDeptId("190");
		allXs.addAll(xs1);
		allXs.addAll(xs2);
		allXs.addAll(xs3);
		allXs.addAll(xs4);
		model.addAttribute("xs", allXs);
		// 研发部
		List<AikoUser> yf = new ArrayList<>();
		List<AikoUser> yf1 = userService.listUserByDeptId("159");
		List<AikoUser> yf2 = userService.listUserByDeptId("220");
		List<AikoUser> yf3 = userService.listUserByDeptId("221");
		List<AikoUser> yf4 = userService.listUserByDeptId("222");
		yf.addAll(yf1);
		yf.addAll(yf2);
		yf.addAll(yf3);
		yf.addAll(yf4);
		model.addAttribute("yfs", yf);
		// 设备
		List<AikoUser> sb = new ArrayList<>();
		List<AikoUser> sb1 = userService.listUserByDeptId("164");
		List<AikoUser> sb2 = userService.listUserByDeptId("191");
		List<AikoUser> sb3 = userService.listUserByDeptId("192");
		List<AikoUser> sb4 = userService.listUserByDeptId("193");
		List<AikoUser> sb5 = userService.listUserByDeptId("194");
		sb.addAll(sb1);
		sb.addAll(sb2);
		sb.addAll(sb3);
		sb.addAll(sb4);
		sb.addAll(sb5);
		model.addAttribute("sbs", sb);
		// 工艺
		List<AikoUser> gy = new ArrayList<>();
		List<AikoUser> gy1 = userService.listUserByDeptId("166");
		List<AikoUser> gy2 = userService.listUserByDeptId("175");
		List<AikoUser> gy3 = userService.listUserByDeptId("176");
		List<AikoUser> gy4 = userService.listUserByDeptId("197");
		List<AikoUser> gy5 = userService.listUserByDeptId("198");
		List<AikoUser> gy6 = userService.listUserByDeptId("199");
		List<AikoUser> gy7 = userService.listUserByDeptId("200");
		gy.addAll(gy1);
		gy.addAll(gy2);
		gy.addAll(gy3);
		gy.addAll(gy4);
		gy.addAll(gy5);
		gy.addAll(gy6);
		gy.addAll(gy7);
		model.addAttribute("gys", gy);
		// 动力部
		List<AikoUser> dl = new ArrayList<>();
		List<AikoUser> dl1 = userService.listUserByDeptId("165");
		List<AikoUser> dl2 = userService.listUserByDeptId("195");
		List<AikoUser> dl3 = userService.listUserByDeptId("196");
		dl.addAll(dl1);
		dl.addAll(dl2);
		dl.addAll(dl3);
		model.addAttribute("dls", dl);
		// 品质
		ArrayList<Object> pz = new ArrayList<>();
		List<AikoUser> pz1 = userService.listUserByDeptId("169");
		List<AikoUser> pz2 = userService.listUserByDeptId("214");
		List<AikoUser> pz3 = userService.listUserByDeptId("215");
		List<AikoUser> pz4 = userService.listUserByDeptId("216");
		List<AikoUser> pz5 = userService.listUserByDeptId("217");
		List<AikoUser> pz6 = userService.listUserByDeptId("218");
		List<AikoUser> pz7 = userService.listUserByDeptId("219");
		pz.addAll(pz1);
		pz.addAll(pz2);
		pz.addAll(pz3);
		pz.addAll(pz4);
		pz.addAll(pz5);
		pz.addAll(pz6);
		pz.addAll(pz7);
		model.addAttribute("zps", pz);
		// 计划控制
		List<AikoUser> jh = new ArrayList<>();
		List<AikoUser> jh1 = userService.listUserByDeptId("171");
		List<AikoUser> jh2 = userService.listUserByDeptId("178");
		List<AikoUser> jh3 = userService.listUserByDeptId("179");
		List<AikoUser> jh4 = userService.listUserByDeptId("180");
		List<AikoUser> jh5 = userService.listUserByDeptId("181");
		List<AikoUser> jh6 = userService.listUserByDeptId("182");
		List<AikoUser> jh7 = userService.listUserByDeptId("183");
		List<AikoUser> jh8 = userService.listUserByDeptId("184");
		jh.addAll(jh1);
		jh.addAll(jh2);
		jh.addAll(jh3);
		jh.addAll(jh4);
		jh.addAll(jh5);
		jh.addAll(jh6);
		jh.addAll(jh7);
		jh.addAll(jh8);
		model.addAttribute("jhs", jh);
		// 生管办
		List<AikoUser> sgbs = new ArrayList<>();
		List<AikoUser> sgbs1 = userService.listUserByDeptId("170");
		List<AikoUser> sgbs2 = userService.listUserByDeptId("203");
		sgbs.addAll(sgbs1);
		sgbs.addAll(sgbs2);
		model.addAttribute("sgbs", sgbs);
		// 生产部
		List<AikoUser> scbs = new ArrayList<>();
		List<AikoUser> scbs1 = userService.listUserByDeptId("174");
		List<AikoUser> scbs2 = userService.listUserByDeptId("172");
		List<AikoUser> scbs3 = userService.listUserByDeptId("173");
		List<AikoUser> scbs4 = userService.listUserByDeptId("160");
		List<AikoUser> scbs5 = userService.listUserByDeptId("177");
		List<AikoUser> scbs6 = userService.listUserByDeptId("201");
		List<AikoUser> scbs7 = userService.listUserByDeptId("202");
		scbs.addAll(scbs1);
		scbs.addAll(scbs2);
		scbs.addAll(scbs3);
		scbs.addAll(scbs4);
		scbs.addAll(scbs5);
		scbs.addAll(scbs6);
		scbs.addAll(scbs7);
		model.addAttribute("scbs", scbs);
		// 填充
		model.addAttribute("users", userlist);
		// model.addAttribute("its", itList);
		// model.addAttribute("zjbs", zjbList);
		// model.addAttribute("rlzys", rlzyList);
		// model.addAttribute("cws", cwList);
		// model.addAttribute("xss", xsList);
		// model.addAttribute("scbs", scbList);
		// model.addAttribute("jhkzs", jhkzList);
		// model.addAttribute("cgs", cgList);
		// model.addAttribute("yfs", cgList);
		// model.addAttribute("markets", marketList);
		// model.addAttribute("pzs", pzList);
		// // 销售
		// model.addAttribute("xss", xsList);
		// // 设备
		// model.addAttribute("equps", equipList);
		// 发送会议室
		model.addAttribute("rooms", onlyTwo);
		// 发送时间段
		model.addAttribute("staTime", staTime);
		model.addAttribute("endTime", endTime);
		model.addAttribute("meetType", state);
		// 发送申请人工号
		model.addAttribute("userId", userId);
		// 发送申请人姓名
		model.addAttribute("userName", userName);
		return "meet/applyLongTime";
	}

	/**
	 * @desc  长期申请
	 * @param meet
	 * @param req
	 * @param res
	 * @param model
	 * @return
	 */
	@PostMapping("/save-LongApply")
	public String saveLongApply(AixuMeeting meet, HttpServletRequest req, HttpServletResponse res, Model model) {
		// 判断是否登陆
		checkIfLogin(res);
		// 获取当前登陆人工号
		String userID = (String) SystemApi.getCurrentUser().get("userid");
		String userName = (String) SystemApi.getCurrentUser().get("name");
		// String userID = "1016087";
		// String userName = "姜林乐";

		meet.setResOne(userID); // 设置申请人id
		String meetRoomIds = meet.getMeetRoomId(); // 获取会议室id

		String meetId = IDUtils.getUuid(true); // 设置会议id

		String[] nos = req.getParameterValues("gonghao"); // 获取工号

		String[] staTimes = req.getParameterValues("staTime"); // 开始时间
		String[] endTimes = req.getParameterValues("endTime"); // 结束时间
		meet.setStaTime(DateUtil.getDateTimeFormat(staTimes[0]));
		meet.setEndTime(DateUtil.getDateTimeFormat(endTimes[0]));
		logger.info("meet1={}", meet);

		meetService.saveMeet1(meet, meetId); // 存储第一个

		StringBuffer meetIds = new StringBuffer(); // 用于存储所有会议的id
		meetIds.append(meetId + ","); // 存储第一个会议id

		for (int i = 1; i < staTimes.length - 1; i++) { // 存储第二个到第n个
			String meetId1 = IDUtils.getUuid(true);
			meetIds.append(i == staTimes.length - 2 ? meetId1 : meetId1 + ","); // 最后一个不加逗号
			meet.setStaTime(DateUtil.getDateTimeFormat(staTimes[i]));
			meet.setEndTime(DateUtil.getDateTimeFormat(endTimes[i]));
			meetService.saveMeet1(meet, meetId1);
			logger.info("meet1={}", meet);
		}

		String[] meetIds1 = meetIds.toString().split(",");	//存储meetandroom
		String[] rooms = meetRoomIds.split(",");
		for (String meetId1 : meetIds1) {
			for (int i = 0; i < rooms.length; i++) {
				logger.info("mar={}", rooms[i]);
				meetAndRoomService.saveMeetAndRoom(meetId1, rooms[i], nos[i].trim());
			}
		}
		
		AikoLongapproom alpr = new AikoLongapproom(); // 存储长时间申请id
		String lpId = IDUtils.getUuid(true);
		alpr.setLpId(lpId);
		alpr.setLpMeetids(meetIds.toString());
		aprDao.insert(alpr);

		List<AixuMeetandroom> meetAndRooms = meetAndRoomService.getMeetRoomByMeetId(meetId);
		// 私有信息模块
		ArrayList<MeetingVo> roomList = new ArrayList<>();
		for (AixuMeetandroom aixuMeetandroom : meetAndRooms) {
			MeetingVo vo = new MeetingVo();
			String name = roomService.getRoomById(aixuMeetandroom.getRoomId()).getMeetRoomName();
			vo.setRoomName(name);
			vo.setEmployeeName(aixuMeetandroom.getPersonNames());
			roomList.add(vo);
		}
		model.addAttribute("meetInfo", meet);
		model.addAttribute("rooms", roomList);

		String loopType = req.getParameter("loopType");
		String loopTimes = req.getParameter("loopTimes");

		String cxzq = "";
		cxzq += loopType.equals("日循环") ? ("每天开1次，持续" + loopTimes + "天") : ("每周开1次，持续" + loopTimes + "周");

		model.addAttribute("meetInfo", meet);
		model.addAttribute("rooms", roomList);
		model.addAttribute("cxzq", cxzq);

		AikoUser au = userService.getUserByNo(userID);
		// 封装OAPOJO,触发OA
		OAPojo oapojo = new OAPojo();
		oapojo.setSpr(req.getParameter("spr"));// 申请人
		oapojo.setDepNames(au.getDeptName());// 部门
		oapojo.setEmpPos(req.getParameter("reason"));// 理由
		oapojo.setPosition((String) SystemApi.getCurrentUser().get("position"));// 职位
		oapojo.setCompany(req.getParameter("company"));// 公司
		oapojo.setEmpPhNo((String) SystemApi.getCurrentUser().get("mobile"));// 手机号
		oapojo.setStaTime(staTimes[0]);// 开始时间
		oapojo.setEndTime(endTimes[0]);// 结束时间
		oapojo.setLoopCycle(cxzq);// 持续周期
		oapojo.setReason(req.getParameter("reason"));// 理由
		oapojo.setMeetTheme(meet.getMeetTheme());// 主题
		oapojo.setResFive(meet.getResFive());// 议程
		oapojo.setRoomName(roomService.getRoomById(meet.getMeetRoomId()).getMeetRoomName());// 会议室
		oapojo.setApplyName(userName);// 申请 人i姓名
		oapojo.setApplyNo(userID);// 申请人工号
		oapojo.setLpid(lpId);// 长时间申请表id
		logger.info("oapojo={}", oapojo);
		OAUtils.CFOA(oapojo);

		// 通知审核人员，需要工号
		return "meet/success-long";
	}
	
	public void checkIfLogin(HttpServletResponse res) {
		try {
			SystemApi.getCurrentUser().get("userid");
		} catch (Exception e) {
			res.setContentType("text/html;charset=UTF-8");
			try {
				res.sendRedirect("http://portal.aikosolar.com");
			} catch (IOException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
